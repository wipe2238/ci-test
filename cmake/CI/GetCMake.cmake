cmake_minimum_required( VERSION 2.8.7 ) # oldest preinstalled (travis)

	message( STATUS "CI       = $ENV{CI}" )
	message( STATUS "APPVEYOR = $ENV{APPVEYOR}" )
	message( STATUS "TRAVIS   = $ENV{TRAVIS}" )

if( NOT CI )
	message( FATAL_ERROR "CI not defined" )
elseif( CI STREQUAL "APPVEYOR" )
	set( CMFILE "C:\cmake.zip" )
#	set( CMFILE "/tmp/cmake.zip" )
	set( CMSUFFIX "win32-x86.zip" )
elseif( CI STREQUAL "TRAVIS" )
	set( CMFILE "/tmp/cmake.sh" )
	set( CMSUFFIX "Linux-x86_64.sh" )
else()
	message( FATAL_ERROR "Unknown CI" )
endif()

if( NOT CMAKELISTS )
	message( FATAL_ERROR "CMAKELISTS not set" )
elseif( NOT CMDIR )
	message( FATAL_ERROR "CMDIR not set" )
endif()

message( STATUS "Checking required CMake version" )
file( STRINGS ${CMAKELISTS} CMVERSION REGEX "^[\ \t]*cmake_minimum_required" )
string( REGEX REPLACE ".*VERSION[ \t]+([0-9]+\\.[0-9]+).*" "\\1" CMVERS ${CMVERSION} )
string( REGEX REPLACE ".*VERSION[ \t]+([0-9]+\\.[0-9]+\\.[0-9]+).*" "\\1" CMVERL ${CMVERSION} )

if( CMAKE_VERSION VERSION_EQUAL CM_VERL )#OR CMAKE_VERSION VERSION_GREATER CM_VERL )
	message( STATUS "Installed CMake meets requirements" )
	return()
endif()

set( CMURL "http://cmake.org/files/v${CMVERS}/cmake-${CMVERL}-${CMSUFFIX}" )
message( STATUS "Downloading ${CMURL}" )
#file( DOWNLOAD "${CMURL}" ${CMFILE} SHOW_PROGRESS )

message( STATUS "Extracting ${CMFILE}" )
file( MAKE_DIRECTORY ${CMDIR} )
if( CI STREQUAL "APPVEYOR" )
	execute_process( COMMAND 7z x ${CMFILE} -o${CMDIR}.tmp )
	file( RENAME ${CMDIR}.tmp/cmake-${CMVERL}-win32-x86 ${CMDIR} )
elseif( CI STREQUAL "TRAVIS" )
	execute_process( COMMAND sh ${CMFILE} --prefix=${CMDIR} --exclude-subdir )
endif()
